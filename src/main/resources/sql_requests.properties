user.select.by.email=select * from users where user_email= ?
user.insert.new=insert into users ( user_name_en_US, user_name_uk_UA, user_surname_en_US, user_surname_uk_UA, user_role, user_password, user_email) values (?,?,?,?,?,?,?) 
user.get.subscriptions.ids = select * from users_on_reports where users_id_user = ?
user.select.all = select * from users
user.select.by.id = select * from users where user_id= ?
user.change.role =UPDATE users SET user_role = ? where user_id =?
user.get.subscribed.emails = select distinct user_email from users_on_reports join users on users_on_reports.users_id_user = user_id  join reports on users_on_reports.reports_id_report = reports.id_report  join conferences c on reports.id_conference = c.id_conference
user.check.vote =select  * from votes where user_id=? and speaker_id=?
user.vote =  insert into votes (user_id, speaker_id, speaker_mark)  values (?,?,?) ON DUPLICATE KEY UPDATE  speaker_mark=?; 


speaker.get.all.with.reports=select * from users join reports r on users.user_id = r.speaker_id where (user_role='SPEAKER' or user_role='ADMIN')
speaker.get.speaker.rating =select  speakers_rating from users where user_id=? 
speaker.update.rating.and.bonus =update users set speakers_rating=?,speakers_bonus=? where user_id=?
speaker.count = select count(user_id) from users where user_role='SPEAKER'
speaker.get.paginated.speakers =select * from (select * from users where (user_role = 'SPEAKER' or user_role = 'ADMIN')limit ?, ?) as c join reports r on c.user_id = r.speaker_id ORDER BY speakers_rating  ASC
speaker.get.new.rating =select round(avg(speaker_mark),2) from votes where speaker_id=?

conferences.count =select count(id_conference) from conferences
conference.delete=delete  from conferences  where id_conference = ?
conferences.select.all.=select * from conferences join reports r on conferences.id_conference = r.id_conference join users u on r.speaker_id = u.user_id
conference.insert=insert into conferences (conference_topic_en_US, conference_topic_uk_UA, conference_location_en_US, conference_location_uk_UA, conference_timestamp)  values (?,?,?,?,?)
conferences.get.all.conference.ids.in.subscriptions = select distinct c.id_conference from users_on_reports join reports r on users_on_reports.reports_id_report = r.id_report join  conferences c on r.id_conference = c.id_conference
conference.select.by.id =select * from conferences join reports r on conferences.id_conference = r.id_conference where conferences.id_conference=?
conferences.select.paginated = select * from(select * from conferences limit ?, ?) as c join reports on c.id_conference = reports.id_conference
conference.update =update conferences set conference_topic_en_US=?, conference_topic_uk_UA=?,conference_location_en_US=?,conference_location_uk_UA=?, conference_timestamp=?

subscription.get.all =select * from users_on_reports join users on users_on_reports.users_id_user = user_id join reports on users_on_reports.reports_id_report = reports.id_report join conferences c on reports.id_conference = c.id_conference

report.insert=insert into reports ( report_topic_en_US,report_topic_uk_UA, id_conference, speaker_id, report_datetime  ) values (?,?,?,?,?)
report.subscribe.user = insert into users_on_reports (users_id_user, reports_id_report) VALUES (?,?)
report.select.by.id = select * from reports where id_report = ?
report.select.subscription.by.id = select * from users_on_reports where users_id_user=? and reports_id_report=?
report.unsubscribe.user = delete from users_on_reports where users_id_user=? and reports_id_report=?
report.add.new.to.conference = insert into reports ( report_topic_en_US,report_topic_uk_UA, id_conference, speaker_id, report_datetime) VALUES (?,?,?,?,?)
report.update =update reports set report_topic_en_US=?,report_topic_uk_UA=? , report_datetime=?,speaker_id=? where id_report=?
report.delete =delete from reports where id_report=?
report.get.amount.of.subscribed.users =select count(users_id_user) from users_on_reports where reports_id_report = ?
report.set.amount.of.subscribed.users =update reports set registrated_participants_amount=? where id_report=?
report.set.amount.of.incoming.users =update reports set visited_participants_amount=? where id_report=?
report.get.amount.of.incoming.users= select visited_participants_amount from reports where id_report=?